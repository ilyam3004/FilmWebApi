version: '3.9'

networks:
  dev:
    driver: bridge

services:
  rabbitmq:
    container_name: rabbitmq
    restart: always
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - dev

  user-service-db:
    image: postgres:latest
    container_name: user-service-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=ilya3004
      - POSTGRES_USER=postgres
      - POSTGRES_DB=userdb
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/UserService/dbscripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - dev

  watchlist-service-db:
    container_name: mongo_db
    image: mongo:latest
    restart: always
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
        - dev

  user-service:
    image: docker.io/ilya3004/user-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      user-service-db:
        condition: service_healthy
    container_name: user-service
    ports:
      - "8080:80"
    build:
      context: .
      dockerfile: src/UserService/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Server=user-service-db;Port=5432;Database=userdb;User ID=postgres;Password=ilya3004;
      - JwtSettings__Secret=super-secret-key
      - JwtSettings__ExpiryMinutes=60
      - JwtSettings__Issuer=Watchwise
      - JwtSettings__Audience=Watchwise
      - RabbitMqConnectionString=amqp://guest:guest@rabbitmq:5672/
      - ASPNETCORE_URLS=http://+:80
    networks:
      - dev

  watchlist-service:
    image: docker.io/ilya3004/watchlist-service
    container_name: watchlist-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8181:80"
    build:
      context: .
      dockerfile: src/WatchlistService/Dockerfile
    environment:
      - DatabaseSettings__ConnectionString=mongodb://mongo_db:27017
      - DatabaseSettings__DatabaseName=WatchlistDB
      - DatabaseSettings__CollectionName=Watchlists
      - JwtSettings__Secret=super-secret-key
      - JwtSettings__ExpiryMinutes=60
      - JwtSettings__Issuer=Watchwise
      - JwtSettings__Audience=Watchwise
      - RabbitMqConnectionString=amqp://guest:guest@rabbitmq:5672/
      - ASPNETCORE_URLS=http://+:80
    networks:
      - dev
      
  movie-service:
    image: docker.io/ilya3004/movie-service
    container_name: movie-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8282:80"
    build:
      context: .
      dockerfile: src/MovieService/Dockerfile
    environment:
      - TmdbApiKey=7f15e76697d018b192edceb6f098447b
      - RabbitMqConnectionString=amqp://guest:guest@rabbitmq:5672/
      - ASPNETCORE_URLS=http://+:80
    networks:
      - dev 
  
  web-client:
    container_name: web-client
    image: web-client
    build: 
      context: src/WebClient
      dockerfile: Dockerfile
    ports:
        - "4200:80"

volumes:
  postgres-data:
  mongodb_data: